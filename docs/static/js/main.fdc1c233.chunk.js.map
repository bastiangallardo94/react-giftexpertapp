{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGift.js","components/GifGrid.js","hooks/useFetchGifs.js","GiffExpertApp.js","index.js"],"names":["btnReact","color","backgroundColor","borderColor","AddCategory","setCategoria","useState","nuevaCategoria","setNuevaCategoria","className","onSubmit","e","preventDefault","trim","length","cat","htmlFor","onChange","target","value","id","type","name","style","bordesito","border","GifGridItem","gif","src","url","alt","title","getGif","categoria","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","useFetchGif","g","key","containerStyle","rStyle","borderTop","GiffExpertApp","cats","ReactDOM","render","document","getElementById"],"mappings":"6MAGMA,EAAW,CACfC,MAAO,UACPC,gBAAiB,UACjBC,YAAa,WAqDAC,EAlDK,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EACIC,mBAAS,IADb,mBACjCC,EADiC,KACjBC,EADiB,KAoBxC,OACE,yBAAKC,UAAU,aACb,0BAAMA,UAAU,8BAA8BC,SAf7B,SAACC,GAEpBA,EAAEC,iBAECL,EAAeM,OAAOC,OAAS,IAChCT,GAAc,SAAAU,GAAG,OAAMR,GAAN,mBAAyBQ,OAC1CP,EAAkB,OAUhB,yBAAKC,UAAU,YACb,2BAAOO,QAAQ,SAASP,UAAU,cAAlC,gBAGA,2BACEQ,SAzBW,SAACN,GACpBH,EAAkBG,EAAEO,OAAOC,QAyBnBC,GAAG,SACHC,KAAK,OACLC,KAAK,SACLb,UAAU,oBACVU,MAAOZ,KAGX,yBAAKE,UAAU,YACb,4BAAQA,UAAU,WAAWc,MAAOvB,GAApC,eC5CJwB,EAAY,CACdC,OAAO,qBAgBIC,EAbK,SAAC,GAAW,IAAVC,EAAS,EAATA,IAClB,OACI,yBAAKlB,UAAU,YACX,yBAAKA,UAAU,yDAAyDc,MAAOC,GAC3E,yBAAKI,IAAKD,EAAIE,IAAKpB,UAAU,eAAeqB,IAAKH,EAAII,QACrD,yBAAKtB,UAAU,aACX,wBAAIA,UAAU,yBAAyBkB,EAAII,W,uBCZlDC,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACZL,EADY,gDACmCM,UAAUF,GAD7C,+DAECG,MAAMP,GAFP,cAEZQ,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLtB,GAAIsB,EAAItB,GACRW,MAAOW,EAAIX,MACXF,IAAG,UAAEa,EAAIC,cAAN,aAAE,EAAYC,iBAAiBf,QARpB,kBAWXW,GAXW,4CAAH,sDCwBJK,EAnBC,SAAC,GAAmB,IAAjBZ,EAAgB,EAAhBA,UAAgB,ECFR,SAACA,GAAc,IAAD,EAEX3B,mBAAS,CAE/BiC,KAAK,GACLO,SAAQ,IALyB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAiBrC,OATAC,qBAAW,WACPjB,EAAOC,GAAWiB,MAAK,SAAAR,GACnBM,EAAS,CACLT,KAAKG,EACLI,SAAQ,SAGlB,CAACb,IAEIc,EDZcI,CAAYlB,GAA5BM,EAH0B,EAG1BA,KAAKO,EAHqB,EAGrBA,QAGZ,OACE,yBAAKrC,UAAU,+CACZqC,GAAW,wBAAIrC,UAAU,2DAAd,eACZ,wBAAIA,UAAU,0BAA0BwB,GACxC,yBAAKxB,UAAU,gCACZ8B,EAAKE,KAAI,SAACW,GAAD,OACR,kBAAC,EAAD,CAAazB,IAAKyB,EAAGC,IAAKD,EAAEhC,WEbhCkC,EAAiB,CACrBpD,gBAAkB,WAGdqD,EAAS,CACbC,UAAW,mBA+CEC,EA1CO,WAAM,MAEQnD,mBAAS,IAFjB,mBAEnB2B,EAFmB,KAER5B,EAFQ,KAO1B,OACE,yBAAKI,UAAU,YAAYc,MAAO+B,GAChC,yBAAK7C,UAAU,OACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,+BAAd,mBAGJ,yBAAKA,UAAU,OAEX,kBAAC,EAAD,CACEJ,aAAcA,KAIpB,wBAAIkB,MAAOgC,IACX,yBAAK9C,UAAU,OACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,iBAAd,gBAGJ,yBAAKA,UAAU,OAEXwB,EAAUQ,KAAI,SAAAiB,GAAI,OAClB,kBAAC,EAAD,CACEzB,UAAWyB,EACXL,IAAKK,UCxCjBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.fdc1c233.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst btnReact = {\r\n  color: \"#000000\",\r\n  backgroundColor: \"#61dafb\",\r\n  borderColor: \"#61dafb\",\r\n};\r\n\r\nconst AddCategory = ({ setCategoria }) => {\r\n  const [nuevaCategoria, setNuevaCategoria] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setNuevaCategoria(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    if(nuevaCategoria.trim().length > 2){\r\n      setCategoria( cat => [ nuevaCategoria, ...cat]);\r\n      setNuevaCategoria('')\r\n    }\r\n\r\n    \r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <form className=\"form-row align-items-center\" onSubmit={handleSubmit}>\r\n        <div className=\"col-auto\">\r\n          <label htmlFor=\"nombre\" className=\"text-white\">\r\n            Add Category\r\n          </label>\r\n          <input\r\n            onChange={handleChange}\r\n            id=\"nombre\"\r\n            type=\"text\"\r\n            name=\"nombre\"\r\n            className=\"form-control mb-2\"\r\n            value={nuevaCategoria}\r\n          />\r\n        </div>\r\n        <div className=\"col-auto\">\r\n          <button className=\"btn mt-4\" style={btnReact}>\r\n            Agregar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategoria: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from 'react'\r\n\r\nconst bordesito = {\r\n    border:\"5px solid #61dafb\"\r\n}\r\n\r\nconst GifGridItem = ({gif}) => {\r\n    return (\r\n        <div className=\"col mb-4\">\r\n            <div className=\"card card-background animate__animated animate__fadeIn\" style={bordesito}>\r\n                <img src={gif.url} className=\"card-img-top\" alt={gif.title}/>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title text-white\">{gif.title}</h5>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;\r\n","export const getGif = async(categoria) => {\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=cnE8pJY4Y4E6T5CTX56VjvqHvA5nHfLm`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n      }\r\n    })\r\n    return gifs;\r\n  }","import React from \"react\";\r\nimport GifGridItem from \"./GifGridItem\";\r\nimport { useFetchGif } from \"../hooks/useFetchGifs\";\r\n\r\n\r\nconst GifGrid = ({ categoria }) => {\r\n\r\n\r\n  const {data,loading} = useFetchGif(categoria);\r\n\r\n\r\n  return (\r\n    <div className=\"col-md-12 animate__animated animate__fadeIn\">\r\n      {loading && <h3 className=\"text-white text-center animate__animated animate__flash\">Cargando...</h3>}\r\n      <h2 className=\"text-white text-center\">{categoria}</h2>\r\n      <div className=\"row row-cols-1 row-cols-md-3\">\r\n        {data.map((g) => (\r\n          <GifGridItem gif={g} key={g.id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\"\r\nimport {getGif} from '../helpers/getGift'\r\n\r\nexport const useFetchGif = (categoria) =>{\r\n\r\n    const [state, setstate] = useState({\r\n\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect( ()=>{\r\n        getGif(categoria).then(img => {\r\n            setstate({\r\n                data:img,\r\n                loading:false\r\n            })\r\n        })\r\n    },[categoria])\r\n\r\n    return state; // {data:[], loading:true}\r\n}","import React, { useState } from \"react\";\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst containerStyle = {\r\n  backgroundColor : '#282c34'\r\n}\r\n\r\nconst rStyle = {\r\n  borderTop: '1px solid white'\r\n}\r\n\r\n\r\n\r\nconst GiffExpertApp = () => {\r\n  //const categories = ['Hajime no ippo', 'kuroko no basket', 'GTO' ]\r\n  const [categoria, setCategoria] = useState([]);\r\n  \r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"container\" style={containerStyle}>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <h2 className=\"text-center text-white mt-3\">GiffExpertApp</h2>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        \r\n          <AddCategory \r\n            setCategoria={setCategoria}\r\n          />\r\n\r\n      </div>\r\n      <hr style={rStyle}/>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <h4 className=\"h4 text-white\">Categorias</h4>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        {\r\n          categoria.map(cats =>\r\n          <GifGrid\r\n            categoria={cats}\r\n            key={cats}\r\n          />)\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nGiffExpertApp.propTypes = {};\r\n\r\nexport default GiffExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GiffExpertApp from './GiffExpertApp';\n\n\nReactDOM.render(\n  <GiffExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}